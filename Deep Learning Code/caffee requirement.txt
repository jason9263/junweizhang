

caffe的代码很经典，贾扬清很厉害，更厉害的是他是第一个编出通用深度学习框架的。
首创的难处是一切全靠自己，没有经验可参照，这不但要求开发者编程能力极强，还要求他的思想超前，力压群雄，否则机会不会是他的。

从caffe看所需知识和技能，主要是：
1.高性能计算。这个当时时机已成熟，nvidia已经推出cuda和cudnn，只要调用就可以，并非最难。

2.存储和序列化设计。他为了减轻设计工作量，以及提高模型的通用性，也使用了谷歌的协议代码，还用了开源的内存数据库。里面的难度是模型格式的设计和规划，这不是代码或编程的难度，是软件工程上的难度，没有一定的开发经验是无法设计的，而一旦决定之后是极难更改的。


3.线程调度。这点比较小巧，对编程高手不算什么难度，贾大神应该是轻松搞定。


4.网络机制的设计。如何传递数据，空间效率时间效率问题，以及如何在显卡和内存传递数据。这个设计上并不复杂，他设计了blob来作为基本存储方式。5.网络预处理，即初始化部分。这是最难的地方之一，一个是包容性，要包容各种类型的层。另一个是整体性，它是层计算、模型解释（把文本描述转化为数据结构）、过程控制的纽带，非常难以设计。我估计贾大神在net类中花了不少精力，修改试验了不少办法。


6.层注册。非常巧妙的设计，既与上面的谷歌开源协议有关，又与网络计算方式有关，使得许多代码变得清晰明了。

7.太多了，不写了。总体感觉caffe代码就像一个精致的艺术品，光凭手艺高超是不够的，还需要对当时的视觉方面的深度学习有深刻的理解，对软件工程有熟练的使用经验才能设计出来。特别是具有通用性的软件，因为通用，所以设计必须考虑一切可能，设计难度比个人自用提升十倍。至于怎样才能达到这样的水平，天才+勤奋+正确的方向。打了这么多字，从设计角度谈了我个人的部分看法，还有大部分没有提到。总之堪称经典。